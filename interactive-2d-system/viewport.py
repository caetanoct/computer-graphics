# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '2dsystem.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QInputDialog, QMainWindow
from input_dialog import Dialog

class Ui_MainWindow(QMainWindow):
    def setupUi(self, MainWindow):
    
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(495, 572)
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setObjectName("centralwidget")
        
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 51, 205))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        
        self.interactivemenuTextLabel = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.interactivemenuTextLabel.setObjectName("interactivemenuTextLabel")
        self.verticalLayout.addWidget(self.interactivemenuTextLabel)
        
        self.zoomInButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.zoomInButton.setObjectName("zoomInButton")
        self.verticalLayout.addWidget(self.zoomInButton)
        
        self.zoomOutButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.zoomOutButton.setObjectName("zoomOutButton")
        self.verticalLayout.addWidget(self.zoomOutButton)
        
        self.upButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.upButton.setObjectName("upButton")
        self.verticalLayout.addWidget(self.upButton)
        
        self.downButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.downButton.setObjectName("downButton")
        self.verticalLayout.addWidget(self.downButton)
        
        self.leftButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.leftButton.setObjectName("leftButton")
        self.verticalLayout.addWidget(self.leftButton)
        
        self.rightButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.rightButton.setObjectName("rightButton")
        self.verticalLayout.addWidget(self.rightButton)
        
        self.viewPortLabel = QtWidgets.QLabel(self.centralwidget)
        self.viewPortLabel.setGeometry(QtCore.QRect(80, 30, 400, 400))
        self.viewPortLabel.setMinimumSize(QtCore.QSize(400, 400))
        self.viewPortLabel.setMaximumSize(QtCore.QSize(400, 400))
        self.viewPortLabel.setAutoFillBackground(True)
        self.viewPortLabel.setText("")
        self.viewPortLabel.setObjectName("viewPortLabel")
        
        canvas = QtGui.QPixmap(400, 400)
        canvas.fill(QtGui.QColor('grey'))
        self.viewPortLabel.setPixmap(canvas)

        self.text_viewport_label = QtWidgets.QLabel(self.centralwidget)
        self.text_viewport_label.setGeometry(QtCore.QRect(80, 10, 141, 16))
        self.text_viewport_label.setObjectName("text_viewport_label")
        
        self.outputTextEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.outputTextEdit.setGeometry(QtCore.QRect(10, 440, 471, 71))
        self.outputTextEdit.setReadOnly(True)
        self.outputTextEdit.setObjectName("outputTextEdit")
        
        MainWindow.setCentralWidget(self.centralwidget)
        
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 495, 22))
        self.menubar.setObjectName("menubar")
        
        self.menuInsert = QtWidgets.QMenu(self.menubar)
        self.menuInsert.setObjectName("menuInsert")
        MainWindow.setMenuBar(self.menubar)
        
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        self.actiondraw_point = QtWidgets.QAction(MainWindow)
        self.actiondraw_point.setObjectName("actiondraw_point")
        self.actiondraw_point.triggered.connect(self.actionDrawPoint)

        self.actiondraw_line = QtWidgets.QAction(MainWindow)
        self.actiondraw_line.setObjectName("actiondraw_line")
        self.actiondraw_line.triggered.connect(self.actionDrawLine)

        self.actionclear = QtWidgets.QAction(MainWindow)
        self.actionclear.setObjectName("actionclear")
        self.actionclear.triggered.connect(self.actionClearViewport)

        self.menuInsert.addAction(self.actiondraw_point)
        self.menuInsert.addAction(self.actiondraw_line)
        self.menuInsert.addAction(self.actionclear)
        
        self.menubar.addAction(self.menuInsert.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "INE5420 - Computer Graphics - Basic 2D System"))
        self.interactivemenuTextLabel.setText(_translate("MainWindow", "Menu"))
        self.zoomInButton.setText(_translate("MainWindow", "+"))
        self.zoomOutButton.setText(_translate("MainWindow", "-"))
        self.upButton.setText(_translate("MainWindow", "up"))
        self.downButton.setText(_translate("MainWindow", "down"))
        self.leftButton.setText(_translate("MainWindow", "left"))
        self.rightButton.setText(_translate("MainWindow", "right"))
        self.text_viewport_label.setText(_translate("MainWindow", "Viewport - 400x400"))
        self.menuInsert.setTitle(_translate("MainWindow", "Insert"))
        self.actiondraw_point.setText(_translate("MainWindow", "draw point"))
        self.actiondraw_line.setText(_translate("MainWindow", "draw line"))
        self.actionclear.setText(_translate("MainWindow", "clear viewport"))
    
    def actionClearViewport(self):
        self.outputTextEdit.append("Clearing Viewport 400x400.")
        painter = QtGui.QPainter(self.viewPortLabel.pixmap())
        pen = QtGui.QPen()
        pen.setWidth(1600)
        pen.setColor(QtGui.QColor('grey'))
        painter.setPen(pen)
        painter.drawPoint(200,200)
        self.viewPortLabel.update()

    def actionDrawLine(self):
        self.outputTextEdit.append("Draw Line Trigerred, drawing line after user input.")
        dg = Dialog()
        dg.accepted.connect(self.use_dialog_data_line)
        dg.exec_()
        #self.drawLine() - will be executed in use_dialog_data_line
        self.viewPortLabel.update()

    def drawLine(self,x1,y1,x2,y2):
        painter = QtGui.QPainter(self.viewPortLabel.pixmap())
        pen = QtGui.QPen()
        pen.setWidth(3)
        pen.setColor(QtGui.QColor('red'))
        painter.setPen(pen)
        # the display file is x1,y1,x2,y2 - this points represent the object line.
        painter.drawLine(x1, y1, x2,y2)
        painter.end()

    def use_dialog_data_line(self, values):
        print(values['x1'], values['y1'], values['x2'], values['y2'])
        self.outputTextEdit.append("Values got from user are (X1: {} ,Y1: {}) (X2: {} ,Y2: {})".format(values['x1'], values['y1'], values['x2'], values['y2']))
        self.drawLine(int(values['x1']), int(values['y1']), int(values['x2']), int(values['y2']))

    def actionDrawPoint(self):
        self.outputTextEdit.append("Draw Point Trigerred, drawing point after getting values from user.")
        button = self.sender()
        i, okPressed = QInputDialog.getInt(self, "Get integer","x1:", 0, -2147483647, 2147483647, 1)
        if okPressed:
            print(i)
        x1 = i
        button = self.sender()
        i, okPressed = QInputDialog.getInt(self, "Get integer","x1:", 0, -2147483647, 2147483647, 1)
        if okPressed:
            print(i)
        y1 = i
        # the display file of a point is x1,y1 - they represent the point
        self.drawPoint(x1,y1)
        self.outputTextEdit.append("Point ({} , {}) was drawn.".format(x1,y1))
        self.viewPortLabel.update()


    def drawPoint(self,x1,y1):    
        painter = QtGui.QPainter(self.viewPortLabel.pixmap())
        pen = QtGui.QPen()
        pen.setWidth(5)
        pen.setColor(QtGui.QColor('yellow'))
        painter.setPen(pen)
        painter.drawPoint(x1, y1)
        painter.end()